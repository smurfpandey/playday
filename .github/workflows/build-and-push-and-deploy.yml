name: build & push docker image

on:
  # Triggers the workflow on push events but only for the main branch
  # push:
  #   branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      docker_image_tag: ${{ steps.prep.outputs.tags }}
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - uses: FranzDiebold/github-env-vars-action@v1.2.1
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/$GITHUB_REPOSITORY
          VERSION=$GITHUB_SHA_SHORT
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ${TAGS}
          echo ::set-output name=tags::${TAGS}
      - name: setup platform emulator
        uses: docker/setup-qemu-action@v1
      - name: setup multi-arch docker build
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  ansible:
    name: 'Deploy via Ansible'
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' }} # This steps runs only on manual trigger
    defaults:
      run:
        working-directory: ./ansible
    env:
      DOCKER_IMAGE: ${{needs.build.outputs.docker_image_tag}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: main.yml
          directory: ./ansible
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          vault_password: ${{ secrets.ANSIBLE_VAULT_PASS }}
          inventory: |
            [all]
            ${{ secrets.DO1_SERVER_NAME }} ansible_user=${{ secrets.DO1_SERVER_SUDO_USER }}
          options: |
            --extra-vars "ansible_become_pass=${{ secrets.DO1_SERVER_SUDO_PASS }} app_docker_image=${{ env.DOCKER_IMAGE }}"
        env:
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
          IGDB_CLIENT_ID: ${{ secrets.IGDB_CLIENT_ID }}
          IGDB_CLIENT_SECRET: ${{ secrets.IGDB_CLIENT_SECRET }}
